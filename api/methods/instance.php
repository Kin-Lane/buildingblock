<?php$route = '/buildingblocks/';$app->get($route, function ()  use ($app){	$ReturnObject = array(); 	$request = $app->request();  	$params = $request->params();		if(isset($params['query'])){ $query = trim(mysql_real_escape_string($params['query'])); } else { $query = '';}	if(isset($params['page'])){ $page = trim(mysql_real_escape_string($params['page'])); } else { $page = 0;}	if(isset($params['count'])){ $count = trim(mysql_real_escape_string($params['count'])); } else { $count = 250;}	if(isset($params['sort'])){ $sort = trim(mysql_real_escape_string($params['sort'])); } else { $sort = 'Name';}	if(isset($params['order'])){ $order = trim(mysql_real_escape_string($params['order'])); } else { $order = 'DESC';}					$SearchQuery = "SELECT b.Building_Block_ID,b.Building_Block_Category_ID,b.Name,b.About,b.Sort_Order,bbc.Name AS Category,bbc.Type as Type FROM building_block b";	$SearchQuery .= " JOIN building_block_category bbc ON b.Building_Block_Category_ID = bbc.BuildingBlockCategory_ID";	if($query!='')		{		$SearchQuery .= " WHERE b.Name LIKE '%" . $query . "%'";		}			$SearchQuery .= " ORDER BY " . $sort . " " . $order . " LIMIT " . $page . "," . $count;	//echo $SearchQuery . "<br />";		$DatabaseResult = mysql_query($SearchQuery) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$building_block_id = $Database['Building_Block_ID'];		$building_block_category_id = $Database['Building_Block_Category_ID'];		$name = $Database['Name'];		$about = $Database['About'];		$category = $Database['Category'];		$category_id = $Database['Building_Block_Category_ID'];		$sort_order = $Database['Sort_Order'];							// manipulation zone				$F = array();		$F['building_block_id'] = $building_block_id;		$F['building_block_category_id'] = $building_block_category_id;		$F['name'] = $name;		$F['about'] = $about;		$F['category_id'] = $category_id;		$F['category'] = $category;		$F['sort_order'] = $sort_order;				array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});		$route = '/buildingblocks/bycategory/:category';$app->get($route, function ($category)  use ($app){	$ReturnObject = array(); 	$request = $app->request();  	$params = $request->params();			$category = trim(mysql_real_escape_string($category));	if(isset($params['page'])){ $page = trim(mysql_real_escape_string($params['page'])); } else { $page = 0;}	if(isset($params['count'])){ $count = trim(mysql_real_escape_string($params['count'])); } else { $count = 250;}	if(isset($params['sort'])){ $sort = trim(mysql_real_escape_string($params['sort'])); } else { $sort = 'b.Name';}	if(isset($params['order'])){ $order = trim(mysql_real_escape_string($params['order'])); } else { $order = 'DESC';}						$Query = "SELECT b.Building_Block_ID,b.Building_Block_Category_ID,b.Name,b.About,b.Sort_Order,bbc.Name AS Category,bbc.Type as Type FROM building_block b";	$Query .= " JOIN building_block_category bbc ON b.Building_Block_Category_ID = bbc.BuildingBlockCategory_ID";	$Query .= " WHERE bbc.Name ='" . $category . "'";	$Query .= " ORDER BY " . $sort . " " . $order . " LIMIT " . $page . "," . $count;	//echo $Query . "<br />";		$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$building_block_id = $Database['Building_Block_ID'];		$building_block_category_id = $Database['Building_Block_Category_ID'];		$name = $Database['Name'];		$about = $Database['About'];		$category = $Database['Category'];		$category_id = $Database['Building_Block_Category_ID'];		$sort_order = $Database['Sort_Order'];							// manipulation zone				$F = array();		$F['building_block_id'] = $building_block_id;		$F['building_block_category_id'] = $building_block_category_id;		$F['name'] = $name;		$F['about'] = $about;		$F['category_id'] = $category_id;		$F['category'] = $category;		$F['sort_order'] = $sort_order;				array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});		$route = '/buildingblocks/bytype/:type';$app->get($route, function ($type)  use ($app){	$ReturnObject = array(); 	$request = $app->request();  	$params = $request->params();			$type = trim(mysql_real_escape_string($type));	if(isset($params['page'])){ $page = trim(mysql_real_escape_string($params['page'])); } else { $page = 0;}	if(isset($params['count'])){ $count = trim(mysql_real_escape_string($params['count'])); } else { $count = 250;}	if(isset($params['sort'])){ $sort = trim(mysql_real_escape_string($params['sort'])); } else { $sort = 'bbc.Name';}	if(isset($params['order'])){ $order = trim(mysql_real_escape_string($params['order'])); } else { $order = 'DESC';}						$Query = "SELECT b.Building_Block_ID,b.Building_Block_Category_ID,b.Name,b.About,b.Sort_Order,bbc.Name AS Category,bbc.Type as Type FROM building_block b";	$Query .= " JOIN building_block_category bbc ON b.Building_Block_Category_ID = bbc.BuildingBlockCategory_ID";	$Query .= " WHERE bbc.Type ='" . $type . "'";	$Query .= " ORDER BY " . $sort . " " . $order . " LIMIT " . $page . "," . $count;	//echo $Query . "<br />";		$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$building_block_id = $Database['Building_Block_ID'];		$building_block_category_id = $Database['Building_Block_Category_ID'];		$name = $Database['Name'];		$about = $Database['About'];		$category = $Database['Category'];		$category_id = $Database['Building_Block_Category_ID'];		$sort_order = $Database['Sort_Order'];							// manipulation zone				$F = array();		$F['building_block_id'] = $building_block_id;		$F['building_block_category_id'] = $building_block_category_id;		$F['name'] = $name;		$F['about'] = $about;		$F['category_id'] = $category_id;		$F['category'] = $category;		$F['sort_order'] = $sort_order;				array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});			$route = '/buildingblocks/bytype/:type/grouped/';$app->get($route, function ($type)  use ($app){	$ReturnObject = array(); 	$request = $app->request();  	$params = $request->params();			$type = trim(mysql_real_escape_string($type));		$Query = "SELECT bbc.BuildingBlockCategory_ID AS Building_Block_Category_ID,bbc.Name,bbc.Sort_Order FROM building_block_category bbc";	$Query .= " WHERE bbc.Type ='" . $type . "'";	$Query .= " ORDER BY Sort_Order";	//echo $Query . "<br />";		$CategoryResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Category = mysql_fetch_assoc($CategoryResult))		{							$Building_Block_Category_ID = $Category['Building_Block_Category_ID'];		$Building_Block_Category_Name = $Category['Name'];		$Building_Block_Category_Sort_Order = $Category['Sort_Order'];				$ReturnObject[$Building_Block_Category_Name] = array();						$Query = "SELECT b.Building_Block_ID,b.Building_Block_Category_ID,b.Name,b.About,b.Sort_Order,bbc.Name AS Category,bbc.Type as Type FROM building_block b";		$Query .= " JOIN building_block_category bbc ON b.Building_Block_Category_ID = bbc.BuildingBlockCategory_ID";		$Query .= " WHERE bbc.BuildingBlockCategory_ID = " . $Building_Block_Category_ID;		$Query .= " ORDER BY b.Sort_Order";		//echo $Query . "<br />";				$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());		  		while ($Database = mysql_fetch_assoc($DatabaseResult))			{							$building_block_id = $Database['Building_Block_ID'];			$building_block_category_id = $Database['Building_Block_Category_ID'];			$name = $Database['Name'];			$about = $Database['About'];			$category = $Database['Category'];			$category_id = $Database['Building_Block_Category_ID'];			$sort_order = $Database['Sort_Order'];					$image_path = "";			$image_width = "100";			$query = "SELECT Building_Block_Image_ID,Building_Block_ID,Image_Name,Image_Path,Width FROM building_block_image WHERE Image_Path <> '' AND Building_Block_ID = " . $building_block_id . " ORDER BY Building_Block_Image_ID DESC LIMIT 1";			//echo $query;			$imageResult = mysql_query($query) or die('Query failed: ' . mysql_error());			$rowcount = 1;			while ($row = mysql_fetch_assoc($imageResult))				{				$image_path = $row['Image_Path'];				$image_width = $row['Width'];					if($image_width==''){ $image_width = 100; }										}								// manipulation zone						$F = array();			$F['building_block_id'] = $building_block_id;			$F['building_block_category_id'] = $building_block_category_id;			$F['name'] = $name;			$F['about'] = $about;			$F['category_id'] = $category_id;			$F['category'] = $category;			$F['image'] = $image_path;			$F['image_width'] = $image_width;			$F['sort_order'] = $sort_order;						array_push($ReturnObject[$Building_Block_Category_Name], $F);			}					}		$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});			$route = '/buildingblocks/';	$app->post($route, function () use ($app){		$Add = 1;	$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();			if(isset($params['building_block_category_id'])){ $building_block_category_id = mysql_real_escape_string($params['building_block_category_id']); } else { $building_block_category_id = ""; }	if(isset($params['name'])){ $name = mysql_real_escape_string($params['name']); } else { $name = 'No Name'; }	if(isset($params['about'])){ $about = mysql_real_escape_string($params['about']); } else { $about = ''; }	if(isset($params['sort_order'])){ $sort_order = mysql_real_escape_string($params['sort_order']); } else { $sort_order = ''; }  	$Query = "SELECT * FROM building_block WHERE Name = '" . $title . "' AND Author = '" . $author . "'";	//echo $Query . "<br />";	$Database = mysql_query($Query) or die('Query failed: ' . mysql_error());		if($Database && mysql_num_rows($Database))		{			$ThisBuildingBlock = mysql_fetch_assoc($Database);			$building_block_id = $ThisBuildingBlock['ID'];		}	else 		{					$Query = "INSERT INTO buildingblock(Building_Block_Category_ID,Name,About,Sort_Order)";		$Query .= " VALUES(";		$Query .= "'" . mysql_real_escape_string($building_block_category_id) . "',";		$Query .= "'" . mysql_real_escape_string($name) . "',";		$Query .= "'" . mysql_real_escape_string($about) . "',";		$Query .= "'" . mysql_real_escape_string($sort_order) . "'";		$Query .= ")";		//echo $Query . "<br />";		mysql_query($Query) or die('Query failed: ' . mysql_error());		$building_block_id = mysql_insert_id();					}	$ReturnObject['building_block_id'] = $building_block_id;		$app->response()->header("Content-Type", "application/json");	echo format_json(json_encode($ReturnObject));	});	$route = '/buildingblocks/tags/';$app->get($route, function ()  use ($app){	$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();		$Query = "SELECT t.Tag_ID, t.Tag, count(*) AS API_Count from tags t";	$Query .= " INNER JOIN buildingblock_tag_pivot btp ON t.Tag_ID = btp.Tag_ID";	$Query .= " GROUP BY t.Tag ORDER BY count(*) DESC";	$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$tag_id = $Database['Tag_ID'];		$tag = $Database['Tag'];		$buildingblock_count = $Database['BuildingBlock_Count'];		$F = array();		$F['tag_id'] = $tag_id;		$F['tag'] = $tag;		$F['buildingblock_count'] = $buildingblock_count;				array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});			$route = '/buildingblocks/tags/:tag/';$app->get($route, function ($tag)  use ($app){	$ReturnObject = array(); 	$request = $app->request();  	$params = $request->params();		$tag = trim(mysql_real_escape_string($tag)); 	$SearchQuery = "SELECT b.Building_Block_ID,b.Building_Block_Category_ID,b.Name,b.About,b.Sort_Order,bbc.Name AS Category,bbc.Type as Type FROM building_block b";	$SearchQuery .= " JOIN building_block_category bbc ON b.Building_Block_Category_ID = bbc.BuildingBlockCategory_ID";	$SearchQuery .= " JOIN building_block_tag_pivot bbtp ON b.Building_Block_ID = bbtp.Building_Block_ID";	$SearchQuery .= " JOIN tags t ON bbtp.Tag_ID = t.Tag_ID";	$SearchQuery .= " WHERE t.Tag = '" . $tag . "'";			$SearchQuery .= " ORDER BY b.Sort_Order ASC";	//echo $SearchQuery . "<br />";		$DatabaseResult = mysql_query($SearchQuery) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$building_block_id = $Database['Building_Block_ID'];		$building_block_category_id = $Database['Building_Block_Category_ID'];		$name = $Database['Name'];		$about = $Database['About'];		$category = $Database['Category'];		$category_id = $Database['Building_Block_Category_ID'];		$sort_order = $Database['Sort_Order'];			$image_path = "";		$image_width = "100";		$query = "SELECT Building_Block_Image_ID,Building_Block_ID,Image_Name,Image_Path,Width FROM building_block_image WHERE Image_Path <> '' AND Building_Block_ID = " . $building_block_id . " ORDER BY Building_Block_Image_ID DESC LIMIT 1";		//echo $query;		$imageResult = mysql_query($query) or die('Query failed: ' . mysql_error());		$rowcount = 1;		while ($row = mysql_fetch_assoc($imageResult))			{			$image_path = $row['Image_Path'];			$image_width = $row['Width'];				if($image_width==''){ $image_width = 100; }									}						// manipulation zone				$F = array();		$F['building_block_id'] = $building_block_id;		$F['building_block_category_id'] = $building_block_category_id;		$F['name'] = $name;		$F['about'] = $about;		$F['category_id'] = $category_id;		$F['category'] = $category;		$F['image'] = $image_path;		$F['image_width'] = $image_width;		$F['sort_order'] = $sort_order;				array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});			$route = '/buildingblocks/tags/:tag/';$app->delete($route, function ($tag)  use ($app){	$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();		$Query = "SELECT t.Tag_ID, t.Tag FROM tags WHERE Tag = '" . trim(mysql_real_escape_string($tag)) . "'";	$TagResult = mysql_query($LinkQuery) or die('Query failed: ' . mysql_error());			if($TagResult && mysql_num_rows($TagResult))		{			$Tag = mysql_fetch_assoc($TagResult);		$Tag_ID = $Tag['Tag_ID'];		$Tag_Text = $Tag['Tag'];		$DeleteQuery = "DELETE FROM building_block_tag_pivot WHERE Tag_ID = " . $Tag_ID;		$DeleteResult = mysql_query($DeleteQuery) or die('Query failed: ' . mysql_error());					$F = array();		$F['tag_id'] = $Tag_ID;		$F['tag'] = $Tag_Text;		$F['buildingblock_count'] = 0;				array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});				$route = '/buildingblocks/tags/:tag/buildingblocks/';$app->get($route, function ($tag)  use ($app){	$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();			if(isset($_REQUEST['week'])){ $week = $params['week']; } else { $week = date('W'); }	if(isset($_REQUEST['year'])){ $year = $params['year']; } else { $year = date('Y'); }		$Query = "SELECT b.* from tags t";	$Query .= " JOIN buildingblock_tag_pivot btp ON t.Tag_ID = btp.Tag_ID";	$Query .= " JOIN buildingblock b ON btp.BuildingBlock_ID = b.ID";	$Query .= " WHERE WEEK(b.Post_Date) = " . $week . " AND YEAR(b.Post_Date) = " . $year . " AND Tag = '" . $tag . "'";	$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$building_block_id = $Database['Building_Block_ID'];		$building_block_category_id = $Database['Building_Block_Category_ID'];		$name = $Database['Name'];		$about = $Database['About'];		$sort_order = $Database['Sort_Order'];							// manipulation zone				$F = array();		$F['building_block_id'] = $building_block_id;		$F['building_block_category_id'] = $building_block_category_id;		$F['name'] = $name;		$F['about'] = $about;		$F['sort_order'] = $sort_order;				array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});			$route = '/buildingblocks/categories/';$app->get($route, function ()  use ($app){	$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();		$Query = "SELECT t.Tag_ID, t.Tag, count(*) AS API_Count from categories t";	$Query .= " INNER JOIN buildingblock_category_pivot btp ON t.Tag_ID = btp.Tag_ID";	$Query .= " GROUP BY t.Tag ORDER BY count(*) DESC";	$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$category_id = $Database['Tag_ID'];		$category = $Database['Tag'];		$buildingblock_count = $Database['BuildingBlock_Count'];		$F = array();		$F['category_id'] = $category_id;		$F['category'] = $category;		$F['buildingblock_count'] = $buildingblock_count;				array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});			$route = '/buildingblocks/categories/:category';$app->delete($route, function ($category)  use ($app){	$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();		$Query = "SELECT t.Tag_ID, t.Tag FROM categories WHERE Tag = '" . trim(mysql_real_escape_string($category)) . "'";	$TagResult = mysql_query($LinkQuery) or die('Query failed: ' . mysql_error());			if($TagResult && mysql_num_rows($TagResult))		{			$Tag = mysql_fetch_assoc($TagResult);		$Tag_ID = $Tag['Tag_ID'];		$Tag_Text = $Tag['Tag'];		$DeleteQuery = "DELETE FROM building_block_category_pivot WHERE Tag_ID = " . $Tag_ID;		$DeleteResult = mysql_query($DeleteQuery) or die('Query failed: ' . mysql_error());					$F = array();		$F['category_id'] = $Tag_ID;		$F['category'] = $Tag_Text;		$F['buildingblock_count'] = 0;				array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});				$route = '/buildingblocks/categories/:category/buildingblocks/';$app->get($route, function ($category)  use ($app){	$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();			if(isset($_REQUEST['week'])){ $week = $params['week']; } else { $week = date('W'); }	if(isset($_REQUEST['year'])){ $year = $params['year']; } else { $year = date('Y'); }		$Query = "SELECT b.* from categories t";	$Query .= " JOIN buildingblock_category_pivot btp ON t.Tag_ID = btp.Tag_ID";	$Query .= " JOIN buildingblock b ON btp.BuildingBlock_ID = b.ID";	$Query .= " WHERE WEEK(b.Post_Date) = " . $week . " AND YEAR(b.Post_Date) = " . $year . " AND Tag = '" . $category . "'";	$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$building_block_id = $Database['Building_Block_ID'];		$building_block_category_id = $Database['Building_Block_Category_ID'];		$name = $Database['Name'];		$about = $Database['About'];		$sort_order = $Database['Sort_Order'];							// manipulation zone				$F = array();		$F['building_block_id'] = $building_block_id;		$F['building_block_category_id'] = $building_block_category_id;		$F['name'] = $name;		$F['about'] = $about;		$F['sort_order'] = $sort_order;				array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});			$route = '/buildingblocks/:building_block_id/';$app->get($route, function ($building_block_id)  use ($app){	$ReturnObject = array();			$Query = "SELECT * FROM building_block WHERE ID = " . $building_block_id;		$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{								$building_block_id = $Database['Building_Block_ID'];		$building_block_category_id = $Database['Building_Block_Category_ID'];		$name = $Database['Name'];		$about = $Database['About'];		$sort_order = $Database['Sort_Order'];							// manipulation zone				$F = array();		$F['building_block_id'] = $building_block_id;		$F['building_block_category_id'] = $building_block_category_id;		$F['name'] = $name;		$F['about'] = $about;		$F['sort_order'] = $sort_order;				$ReturnObject = $F;		}		$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});		$route = '/buildingblocks/:building_block_id/tags/:tag/';$app->delete($route, function ($building_block_id,$tag)  use ($app){	$ReturnObject = array();		 	$request = $app->request();  	$param = $request->params();			if($tag != '')		{			$building_block_id = trim(mysql_real_escape_string($building_block_id));		$tag = trim(mysql_real_escape_string($tag));			$CheckTagQuery = "SELECT Tag_ID FROM tags where Tag = '" . $tag . "'";		$CheckTagResults = mysql_query($CheckTagQuery) or die('Query failed: ' . mysql_error());				if($CheckTagResults && mysql_num_rows($CheckTagResults))			{			$Tag = mysql_fetch_assoc($CheckTagResults);					$tag_id = $Tag['Tag_ID'];			$DeleteQuery = "DELETE FROM building_block_tag_pivot where Tag_ID = " . trim($tag_id) . " AND BuildingBlock_ID = " . trim($building_block_id);			$DeleteResult = mysql_query($DeleteQuery) or die('Query failed: ' . mysql_error());			}		$F = array();		$F['tag_id'] = $tag_id;		$F['tag'] = $tag;		$F['buildingblock_count'] = 0;				array_push($ReturnObject, $F);		}				$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});			$route = '/buildingblocks/:building_block_id/tags/';$app->get($route, function ($building_block_id)  use ($app){	$ReturnObject = array();		 	$request = $app->request();  	$param = $request->params();			$Query = "SELECT t.Tag_ID, t.Tag FROM tags t";	$Query .= " JOIN buildingblock_tag_pivot btp ON t.Tag_ID = btp.Tag_ID";	$Query .= " WHERE btp.BuildingBlock_ID = " . $building_block_id;	$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());			while ($Database = mysql_fetch_assoc($DatabaseResult))		{					$Tag_ID = $Database['Tag_ID'];		$Tag_Text = $Database['Tag'];		$F = array();		$F['tag_id'] = $Tag_ID;		$F['tag'] = $Tag_Text;				array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});					$route = '/buildingblocks/:building_block_id/tags/';$app->post($route, function ($BuildingBlock_ID)  use ($app){	$ReturnObject = array();		 	$request = $app->request();  	$param = $request->params();			if(isset($param['tag']))		{		$tag = trim(mysql_real_escape_string($param['tag']));					$CheckTagQuery = "SELECT Tag_ID FROM tags where Tag = '" . $tag . "'";		$CheckTagResults = mysql_query($CheckTagQuery) or die('Query failed: ' . mysql_error());				if($CheckTagResults && mysql_num_rows($CheckTagResults))			{			$Tag = mysql_fetch_assoc($CheckTagResults);					$Tag_ID = $Tag['Tag_ID'];			}		else			{			$query = "INSERT INTO tags(Tag) VALUES('" . trim($_POST['Tag']) . "'); ";			mysql_query($query) or die('Query failed: ' . mysql_error());				$Tag_ID = mysql_insert_id();						}		$CheckTagPivotQuery = "SELECT * FROM building_block_tag_pivot where Tag_ID = " . trim($Tag_ID) . " AND BuildingBlock_ID = " . trim($BuildingBlock_ID);		$CheckTagPivotResult = mysql_query($CheckTagPivotQuery) or die('Query failed: ' . mysql_error());				if($CheckTagPivotResult && mysql_num_rows($CheckTagPivotResult))			{			$CheckTagPivot = mysql_fetch_assoc($CheckTagPivotResult);					}		else			{			$query = "INSERT INTO buildingblock_tag_pivot(Tag_ID,BuildingBlock_ID) VALUES(" . $Tag_ID . "," . $BuildingBlock_ID . "); ";			mysql_query($query) or die('Query failed: ' . mysql_error());								}		$F = array();		$F['tag_id'] = $Tag_ID;		$F['tag'] = $tag;		$F['buildingblock_count'] = 0;				array_push($ReturnObject, $F);		}				$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});				$route = '/buildingblocks/:building_block_id/';	$app->put($route, function ($building_block_id) use ($app){			$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();				if(isset($params['building_block_category_id'])){ $building_block_category_id = mysql_real_escape_string($params['building_block_category_id']); } else { $building_block_category_id = ""; }	if(isset($params['name'])){ $name = mysql_real_escape_string($params['name']); }	if(isset($params['about'])){ $about = mysql_real_escape_string($params['about']); } else { $about = ''; }	if(isset($params['sort_order'])){ $sort_order = mysql_real_escape_string($params['sort_order']); }  	$Query = "SELECT * FROM building_block WHERE ID = " . $building_block_id;	//echo $Query . "<br />";	$Database = mysql_query($Query) or die('Query failed: ' . mysql_error());		if($Database && mysql_num_rows($Database))		{			$query = "UPDATE buildingblock SET";		$query .= " Building_Block_Category_ID = '" . mysql_real_escape_string($building_block_category_id) . "'";		$query .= ", Name = '" . mysql_real_escape_string($name) . "',";				if($post_date!='') { $query .= ", About = '" . $about . "',"; }		if($author!='') { $query .= ", Sort_Order = '" . $sort_order . "',"; }				$query .= ", Closing = 'nothing'";				$query .= " WHERE Building_Block_ID = '" . $building_block_id . "'";				//echo $query . "<br />";		mysql_query($query) or die('Query failed: ' . mysql_error());			}	$F = array();	$F['building_block_id'] = $building_block_id;	$F['building_block_category_id'] = $building_block_category_id;	$F['name'] = $name;	$F['about'] = $about;	$F['sort_order'] = $sort_order;		array_push($ReturnObject, $F);			$app->response()->header("Content-Type", "application/json");	echo stripslashes(format_json(json_encode($ReturnObject)));	});	$route = '/buildingblocks/:building_block_id/';	$app->delete($route, function ($building_block_id) use ($app){		$Add = 1;	$ReturnObject = array();	 	$request = $app->request();  	$_POST = $request->params();		$query = "DELETE FROM building_block WHERE ID = " . $building_block_id;	//echo $query . "<br />";	mysql_query($query) or die('Query failed: ' . mysql_error());		});				?>